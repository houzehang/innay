
/*# sourceMappingURL=data:application/json;charset=utf8;base64,{"version":3,"names":[],"mappings":"","sources":["base.less"],"sourcesContent":["// less 基础函数库\n.text-shadow (@string: 0 1px 3px rgba(0, 0, 0, 0.25)) {\n\ttext-shadow: @string;\n}\n.box-shadow (@string) {\n\t-webkit-box-shadow: @string;\n\t-moz-box-shadow:    @string;\n\tbox-shadow:         @string;\n}\n.drop-shadow (@x: 0, @y: 1px, @blur: 2px, @spread: 0, @alpha: 0.25) {\n\t-webkit-box-shadow:\t@x @y @blur @spread rgba(0, 0, 0, @alpha);\n\t-moz-box-shadow:\t@x @y @blur @spread rgba(0, 0, 0, @alpha);\n\tbox-shadow:\t\t@x @y @blur @spread rgba(0, 0, 0, @alpha);\n}\n.inner-shadow (@x: 0, @y: 1px, @blur: 2px, @spread: 0, @alpha: 0.25) {\n\t-webkit-box-shadow: inset @x @y @blur @spread rgba(0, 0, 0, @alpha);\n\t-moz-box-shadow:    inset @x @y @blur @spread rgba(0, 0, 0, @alpha);\n\tbox-shadow:         inset @x @y @blur @spread rgba(0, 0, 0, @alpha);\n}\n\n.box-sizing (@type: border-box) {\n\t-webkit-box-sizing: @type;\n\t-moz-box-sizing:    @type;\n\tbox-sizing:         @type;\n}\n\n.border-radius (@radius: 5px) {\n\t-webkit-border-radius: @radius;\n\t-moz-border-radius:    @radius;\n\tborder-radius:         @radius;\n\n\t-moz-background-clip:    padding;\n\t-webkit-background-clip: padding-box;\n\tbackground-clip:         padding-box;\n}\n.border-radiuses (@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {\n\t-webkit-border-top-right-radius:    @topright;\n\t-webkit-border-bottom-right-radius: @bottomright;\n\t-webkit-border-bottom-left-radius:  @bottomleft;\n\t-webkit-border-top-left-radius:     @topleft;\n\n\t-moz-border-radius-topright:        @topright;\n\t-moz-border-radius-bottomright:     @bottomright;\n\t-moz-border-radius-bottomleft:      @bottomleft;\n\t-moz-border-radius-topleft:         @topleft;\n\n\tborder-top-right-radius:            @topright;\n\tborder-bottom-right-radius:         @bottomright;\n\tborder-bottom-left-radius:          @bottomleft;\n\tborder-top-left-radius:             @topleft;\n\n\t-moz-background-clip:    padding; \n\t-webkit-background-clip: padding-box; \n\tbackground-clip:         padding-box; \n}\n\n.opacity (@opacity: 0.5) {\n\t-webkit-opacity: \t@opacity;\n\t-moz-opacity: \t\t@opacity;\n\topacity: \t\t@opacity;\n}\n\n.gradient (@startColor: #eee, @endColor: white) {\n\tbackground-color: @startColor;\n\tbackground: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));\n\tbackground: -webkit-linear-gradient(top, @startColor, @endColor);\n\tbackground: -moz-linear-gradient(top, @startColor, @endColor);\n\tbackground: -ms-linear-gradient(top, @startColor, @endColor);\n\tbackground: -o-linear-gradient(top, @startColor, @endColor);\n}\n.horizontal-gradient (@startColor: #eee, @endColor: white) {\n \tbackground-color: @startColor;\n\tbackground-image: -webkit-gradient(linear, left top, right top, from(@startColor), to(@endColor));\n\tbackground-image: -webkit-linear-gradient(left, @startColor, @endColor);\n\tbackground-image: -moz-linear-gradient(left, @startColor, @endColor);\n\tbackground-image: -ms-linear-gradient(left, @startColor, @endColor);\n\tbackground-image: -o-linear-gradient(left, @startColor, @endColor);\n}\n\n.animation (@name, @duration: 300ms, @delay: 0, @ease: ease) {\n\t-webkit-animation: @name @duration @delay @ease;\n\t-webkit-animation-fill-mode:forwards;\n\t-moz-animation:    @name @duration @delay @ease;\n\t-ms-animation:     @name @duration @delay @ease;\n}\n\n.step(@name, @duration: 300ms, @delay: 0, @step:1, @times:1) {\n\t-webkit-animation: @name @duration steps(@step) @delay @times;\n\t-webkit-animation-fill-mode:forwards;\n\t-moz-animation:    @name @duration steps(@step) @delay @times;\n\t-ms-animation:     @name @duration steps(@step) @delay @times;\n}\n\n.animation-i (@name, @duration: 300ms, @delay: 0, @ease: ease) {\n\t-webkit-animation: @name @duration @delay @ease infinite;\n\t-webkit-animation-fill-mode:forwards;\n\t-moz-animation:    @name @duration @delay @ease infinite;\n\t-ms-animation:     @name @duration @delay @ease infinite;\n}\n\n.transition (@transition) {\n\t-webkit-transition: @transition;  \n\t-moz-transition:    @transition;\n\t-ms-transition:     @transition; \n\t-o-transition:      @transition;  \n}\n.transform(@string){\n\t-webkit-transform: @string;\n\t-moz-transform: \t @string;\n\t-ms-transform: \t\t @string;\n\t-o-transform: \t\t @string;\n}\n.scale (@factor) {\n\t-webkit-transform: scale(@factor);\n\t-moz-transform: \t scale(@factor);\n\t-ms-transform: \t\t scale(@factor);\n\t-o-transform: \t\t scale(@factor);\n}\n.rotate (@deg) {\n\t-webkit-transform: rotate(@deg);\n\t-moz-transform: \t rotate(@deg);\n\t-ms-transform: \t\t rotate(@deg);\n\t-o-transform: \t\t rotate(@deg);\n}\n.skew (@deg, @deg2) {\n\t-webkit-transform:       skew(@deg, @deg2);\n\t-moz-transform: \t skew(@deg, @deg2);\n\t-ms-transform: \t\t skew(@deg, @deg2);\n\t-o-transform: \t\t skew(@deg, @deg2);\n}\n.translate (@x, @y:0) {\n\t-webkit-transform:       translate(@x, @y);\n\t-moz-transform: \t translate(@x, @y);\n\t-ms-transform: \t\t translate(@x, @y);\n\t-o-transform: \t\t translate(@x, @y);\n}\n.transform-style (@style) {\n\t-webkit-transform-style: @style;\n\t-moz-transform-style: \t @style;\n\t-ms-transform-style: \t @style;\n\t-o-transform-style: \t @style;\n}\n.translate3d (@x, @y: 0, @z: 0) {\n\t-webkit-transform:       translate3d(@x, @y, @z);\n\t-moz-transform: \t translate3d(@x, @y, @z);\n\t-ms-transform: \t\t translate3d(@x, @y, @z);\n\t-o-transform: \t\t translate3d(@x, @y, @z);\n}\n.perspective (@value: 1000) {\n\t-webkit-perspective: \t@value;\n\t-moz-perspective: \t@value;\n\t-ms-perspective: \t@value;\n\tperspective: \t\t@value;\n}\n.transform-origin (@x:center, @y:center) {\n\t-webkit-transform-origin: @x @y;\n\t-moz-transform-origin:    @x @y;\n\t-ms-transform-origin:     @x @y;\n\t-o-transform-origin:      @x @y;\n}\n.user-select(@value:none) {\n    -webkit-user-select: @value;\n    -moz-user-select: @value;\n    -ms-user-select: @value;\n    -o-user-select: @value;\n    user-select: @value;\n}\n.background-size(@value: cover) {\n\t-moz-background-size:@value;\n    -webkit-background-size:@value;\n    -o-background-size:@value;\n    background-size:@value;\n}\n.normal-font () {\n\tfont-family: \"Helvetica Neue\", \"Hiragino Sans GB\", \"Segoe UI\", \"Microsoft Yahei\", \"微软雅黑\", Tahoma, Arial, STHeiti, sans-serif;\n}\n.view-base(@path) {\n\twidth: unit(image-width(\"../dist/assets/@{path}\"))/100rem;\n\theight: unit(image-height(\"../dist/assets/@{path}\"))/100rem;\n\tbackground: url(\"../assets/@{path}\") no-repeat center center;\n\tbackground-size: 100% 100%;\n}\n.view(@path) {\n\tposition: absolute;\n\t.view-base(@path);\n}\n.btn(@on){\n\t.view(\"@{on}.png\");\n\t&:active{\n\t\t.view(\"@{on}-d.png\");\n\t}\n}\n.btn-c(@on){\n\t.view(\"@{on}.png\");\n\tleft: 50%;\n\tmargin-left: -(image-width(\"../dist/assets/@{on}.png\")/2);\n\t&:active{\n\t\t.view(\"@{on}-d.png\");\n\t}\n}\n.pos(@path, @l, @t) {\n\t.view(@path);\n\tleft: @l;\n\ttop: @t;\n}\n.pos-t(@path, @l, @t) {\n\t.view(@path);\n\tleft: @l;\n\ttop: 50%;\n\tmargin-top: -602 + @t;\n}\n.pos-b(@path) {\n\t.view(@path);\n\tleft: 50%;\n\tmargin-left: -(image-width(\"../dist/assets/@{path}\")/2);\n}\n.v-c(@path, @offsetY:0) {\n\t.view(@path);\n\ttop: 50%;\n\tleft: 50%;\n\tmargin-left: -(image-width(\"../dist/assets/@{path}\")/2);\n\tmargin-top: -(image-height(\"../dist/assets/@{path}\")/2) + @offsetY;\n}\n.v-c-t(@path, @offsetY:0) {\n\t.view(@path);\n\ttop: 50%;\n\tleft: 50%;\n\tmargin-left: -(image-width(\"../dist/assets/@{path}\")/2);\n\tmargin-top: -602 + @offsetY;\n}\n.element(@left, @top, @img, @delta:1.3rem) {\n\tposition: absolute;\n\tleft: @left/100rem;\n\ttop: @top/100rem-@delta;\n\twidth: unit(image-width(\"../dist/assets/@{img}\"))/100rem;\n\theight: unit(image-height(\"../dist/assets/@{img}\"))/100rem;\n\tbackground: url(\"../assets/@{img}\") no-repeat center center;\n\tbackground-size: 100% auto;\n}\n.element-c(@top, @img, @delta:1.3rem) {\n\tposition: absolute;\n\tleft: (750-unit(image-width(\"../dist/assets/@{img}\")))/2/100rem;\n\ttop: @top/100rem-@delta;\n\twidth: unit(image-width(\"../dist/assets/@{img}\"))/100rem;\n\theight: unit(image-height(\"../dist/assets/@{img}\"))/100rem;\n\tbackground: url(\"../assets/@{img}\") no-repeat center center;\n\tbackground-size: 100% auto;\n}\n.back(@img) {\n\tbackground-image: url(\"../assets/@{img}\");\n\tbackground-size: unit(image-width(\"../dist/assets/@{img}\"))/100rem unit(image-height(\"../dist/assets/@{img}\"))/100rem;\n}\n.shadow(@left, @top, @img) {\n\tposition: absolute;\n\tleft: @left/100rem;\n\ttop: @top/100rem-1.3rem;\n\twidth: unit(image-width(\"../dist/assets/@{img}\"))/100rem;\n\theight: unit(image-height(\"../dist/assets/@{img}\"))/100rem;\n\t.i {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground: url(\"../assets/@{img}\") no-repeat center center;\n\t\tbackground-size: auto 100%;\n\t}\n}\n.top(@value) {\n\ttop: @value - 1.3rem;\n}\n.ellipsis() {\n    text-overflow:ellipsis;\n    overflow:hidden;\n    -webkit-text-overflow:ellipsis; \n}\n\n.placeholder(@rules) {\n    &::-webkit-input-placeholder {\n        @rules();\n    }\n}"],"file":"base.css"} */
